// import * as ts from 'typescript';
import * as fs from 'fs';
import * as Path from 'path';
// import * as _ from 'lodash';
import {TypescriptParser} from '../parse-ts-import';
import {FactoryMap} from '../factory-map';

describe("Typescript AST", () => {
	it("can be generated by typescript lib", () => {
		let file = Path.resolve(__dirname, '../../ts/spec/test-ts.txt');
		let source = fs.readFileSync(file, 'utf8');
		let fm = new FactoryMap();
		// fm.substitute()
		var infos = new TypescriptParser().replace(source, fm, file);
		console.log(infos);
		// let sFile = ts.createSourceFile('test-ts.ts', source,
		// 	ts.ScriptTarget.ES2015);
		// traverse(sFile);
		// function traverse(ast: ts.Node, level = 0) {
		// 	console.log(_.repeat(' |- ', level) + ts.SyntaxKind[ast.kind]);
		// 	let count = 0;
		// 	ast.forEachChild((sub: ts.Node) => {
		// 		traverse(sub, level + 1);
		// 		count++;
		// 	});
		// 	if (count === 0) {
		// 		console.log(_.repeat(' |- ', level + 1), `"${source.substring(ast.getStart(sFile), ast.getEnd())}"`);
		// 	}
		// }
	});
});

export default {
	ok: 1
}
